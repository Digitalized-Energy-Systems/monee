name: Test monee

on:
  push:
    branches:
      - main
      - development
  pull_request:
    types: [opened, synchronize, reopened]


permissions:
  contents: read

jobs:
  build-mac:
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '**/setup.py'
    - name: Install dependencies
      run: |
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        apt install graphviz
        pip3 install -U sphinx
        pip3 install -r docs/requirements.txt
        pip3 install -e .[test]
        pip3 install pytest coverage ruff
    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        source venv/bin/activate
        ruff check .
        ruff format --check .
    - name: Doctests
      run: |
        source venv/bin/activate
        make -C docs doctest
    - name: Test+Coverage
      run: |
        source venv/bin/activate
        pytest --cov --cov-report=xml -v -m "not pptest"

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '**/setup.py'
    - name: Install dependencies
      run: |
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        apt install graphviz
        pip3 install -U sphinx
        pip3 install -r docs/requirements.txt
        pip3 install -e .[test]
        pip3 install pytest coverage ruff
    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        source venv/bin/activate
        ruff check .
        ruff format --check .
    - name: Doctests
      run: |
        source venv/bin/activate
        make -C docs doctest
    - name: Test+Coverage
      run: |
        source venv/bin/activate
        pytest --cov --cov-report=xml -v -m "not pptest"

  test-pp:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '**/setup.py'
    - name: Install dependencies
      run: |
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        apt install graphviz
        pip3 install -U sphinx
        pip3 install -r docs/requirements.txt
        pip3 install -e .[testpp]
        pip3 install pytest coverage ruff
    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        source venv/bin/activate
        ruff check .
        ruff format --check .
    - name: Doctests
      run: |
        source venv/bin/activate
        make -C docs doctest
    - name: Test+Coverage
      run: |
        source venv/bin/activate
        pytest --cov --cov-report=xml
    - uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN  }}
        fail_ci_if_error: false
    - name: SonarQube Cloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
